//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.6.2'.
//
package com.pchpsky.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.pchpsky.SettingsQuery
import com.pchpsky.type.BloodGlucoseUnits
import com.pchpsky.type.adapter.BloodGlucoseUnits_ResponseAdapter
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object SettingsQuery_ResponseAdapter {
  public object Data : Adapter<SettingsQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("settings")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        SettingsQuery.Data {
      var _settings: SettingsQuery.Settings? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _settings = Settings.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return SettingsQuery.Data(
        settings = _settings
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: SettingsQuery.Data,
    ): Unit {
      writer.name("settings")
      Settings.obj().nullable().toJson(writer, customScalarAdapters, value.settings)
    }
  }

  public object Settings : Adapter<SettingsQuery.Settings> {
    public val RESPONSE_NAMES: List<String> = listOf("bloodGlucoseUnits", "insulins")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        SettingsQuery.Settings {
      var _bloodGlucoseUnits: BloodGlucoseUnits? = null
      var _insulins: List<SettingsQuery.Insulin?>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _bloodGlucoseUnits = BloodGlucoseUnits_ResponseAdapter.nullable().fromJson(reader,
              customScalarAdapters)
          1 -> _insulins = Insulin.obj().nullable().list().nullable().fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      return SettingsQuery.Settings(
        bloodGlucoseUnits = _bloodGlucoseUnits,
        insulins = _insulins
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: SettingsQuery.Settings,
    ): Unit {
      writer.name("bloodGlucoseUnits")
      BloodGlucoseUnits_ResponseAdapter.nullable().toJson(writer, customScalarAdapters,
          value.bloodGlucoseUnits)

      writer.name("insulins")
      Insulin.obj().nullable().list().nullable().toJson(writer, customScalarAdapters,
          value.insulins)
    }
  }

  public object Insulin : Adapter<SettingsQuery.Insulin> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "name", "color")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        SettingsQuery.Insulin {
      var _id: String? = null
      var _name: String? = null
      var _color: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _name = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _color = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return SettingsQuery.Insulin(
        id = _id,
        name = _name,
        color = _color
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: SettingsQuery.Insulin,
    ): Unit {
      writer.name("id")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("name")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.name)

      writer.name("color")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.color)
    }
  }
}
